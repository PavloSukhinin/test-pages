{"version":3,"file":"component---src-pages-lectures-how-to-work-with-git-en-index-mdx-895e3bd3902dd0583caf.js","mappings":"uVAOaA,EAAW,CACtBC,QAAS,EACTC,OAAQ,sBACRC,MAAO,uBACPC,YAAa,+LACbC,SAAU,CAAC,OAAQ,SACnBC,SAAU,SACVC,YAAa,sBACbC,oBAAoB,GAETC,EAAe,CAAC,EACvBC,EAAc,CAClBV,SAAAA,EACAS,aAAAA,GAEIE,EAAYC,EAAAA,GACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,QAACJ,EAAS,iBAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAE5E,oBACF,mBACE,sBAAQ,2BAGR,QAAC,KAAQ,CAACC,gBAAgB,KAAKC,UAAW,CACxCC,GAAI,mCACJC,GAAI,oCACHJ,QAAQ,cACX,oBACF,eAAKK,UAAU,WACX,eAAKA,UAAU,mBACb,kBAAQA,UAAU,gBAAgBC,KAAK,MAAMC,KAAMC,EAAAA,GAA8B,aAAW,0BAE9F,eAAKH,UAAU,YACb,cAAIA,UAAU,QAAO,wBACrB,aAAGA,UAAU,SAAQ,gHAK3B,eAAKA,UAAU,SAASI,MAAO,CACzB,OAAU,oBAEd,sBAAQ,gBAAqB,OAAG,mBAAM,8HAGtC,eAAKC,GAAG,oBAAoBL,UAAU,oBAAoBI,MAAO,CAC/D,UAAa,SAEjB,mBAAI,sBAAQ,kBACZ,QAAC,KAAkB,CAACE,SAAU,CAAC,CACzBC,OAAQ,6BACRzB,MAAO,6BACN,CACDyB,OAAQ,kBACRzB,OAAO,oBAAM,WAAO,oBAAM,OAAU,cACnC,CACDyB,OAAQ,YACRzB,MAAO,YACN,CACDyB,OAAQ,gBACRzB,MAAO,qBACLa,QAAQ,yBAEd,QAAC,KAAY,CAACV,SAAS,UAAUU,QAAQ,iBAC3C,kBAAQa,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,MAEtL,QAAC,KAAK,CAACN,GAAG,4BAA4BO,OAAO,IAAIC,KAAK,4BAA4BC,WAAW,WAAWC,WAAW,mCAAmCpB,QAAQ,WAC9J,mBACE,cAAIqB,WAAW,OACb,aAAGA,WAAW,MAAI,yHAElB,aAAGC,KAAK,oHAAkH,sBAAQ,sBAAgC,KAClK,aAAGA,KAAK,4EAA0E,sBAAQ,2BAAmC,MAE/H,cAAID,WAAW,OACb,aAAGA,WAAW,MAAI,gCAAiC,gBAAMA,WAAW,IAChE,UAAa,iBAAe,aACP,wCACzB,aAAGA,WAAW,MAAI,kDAClB,eAAKA,WAAW,KACd,UAAa,mBACb,gBAAiB,SAChB,eAAKA,WAAW,MACf,UAAa,kBACZ,gBAAMA,WAAW,MAChB,UAAa,iBAAe,8DAElC,aAAGA,WAAW,MAAI,qBAClB,eAAKA,WAAW,KACd,UAAa,mBACb,gBAAiB,SAChB,eAAKA,WAAW,MACf,UAAa,kBACZ,gBAAMA,WAAW,MAChB,UAAa,iBAAe,2DAGpC,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,QAAS,gBAAMA,WAAW,IACxC,UAAa,iBAAe,0BACM,oCAExC,cAAIA,WAAW,OACb,aAAGA,WAAW,OAAK,gBAAMA,WAAW,IAChC,UAAa,iBAAe,cACN,4KAI9B,QAAC,KAAK,CAACX,GAAG,iBAAiBO,OAAO,IAAIC,MAAM,oBAAM,WAAO,oBAAM,OAAU,aAAkBC,WAAW,WAAWC,WAAW,qCAAqCpB,QAAQ,WACzK,mBACE,cAAIqB,WAAW,OACb,aAAGA,WAAW,MAAI,oDAAqD,gBAAMA,WAAW,IACpF,UAAa,iBAAe,WACT,uCACjB,gBAAMA,WAAW,IACnB,UAAa,iBAAe,aACP,oBAAoB,6BAAwB,qCAEvE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,2BAA4B,gBAAMA,WAAW,IAC3D,UAAa,iBAAe,cACN,gDAC1B,eAAKA,WAAW,KACd,UAAa,mBACb,gBAAiB,SAChB,eAAKA,WAAW,MACf,UAAa,kBACZ,gBAAMA,WAAW,MAChB,UAAa,iBAAe,yCAGpC,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,QAAS,gBAAMA,WAAW,IACxC,UAAa,iBAAe,cACN,uCAAuC,gBAAMA,WAAW,IAC9E,UAAa,iBAAe,4BACQ,6BAA6B,cAAIA,WAAW,MAAS,qDACnD,gBAAMA,WAAW,IACvD,UAAa,iBAAe,+BACW,iBAE7C,cAAIA,WAAW,OACb,aAAGA,WAAW,OAAK,gBAAMA,WAAW,IAChC,UAAa,iBAAe,WACT,qDAEzB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,qCAAsC,gBAAMA,WAAW,IACrE,UAAa,iBAAe,YACR,uFAC0C,gBAAMA,WAAW,IAC/E,UAAa,iBAAe,uCACmB,cACjD,gBAAMA,WAAW,IACf,UAAa,iBAAe,2BACO,qHACU,gBAAMA,WAAW,IAC9D,UAAa,iBAAe,+BACW,SAE7C,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,4DAA6D,gBAAMA,WAAW,IAC5F,UAAa,iBAAe,aACP,8CACrB,gBAAMA,WAAW,IACjB,UAAa,iBAAe,kBACF,8CAA8C,gBAAMA,WAAW,IACzF,UAAa,iBAAe,iBACH,uCAG/B,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,0DAA2D,gBAAMA,WAAW,IAC1F,UAAa,iBAAe,aACP,cAAc,gBAAMA,WAAW,IACpD,UAAa,iBAAe,aACP,gLAE8B,gBAAMA,WAAW,IACpE,UAAa,iBAAe,yBACK,4BAC/B,gBAAMA,WAAW,IACnB,UAAa,iBAAe,YACR,kFAE1B,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,wGAAyG,gBAAMA,WAAW,IACxI,UAAa,iBAAe,uBACG,SAGvC,QAAC,KAAK,CAACX,GAAG,WAAWO,OAAO,IAAIC,KAAK,WAAWC,WAAW,eAAeC,WAAW,8BAA8BpB,QAAQ,WAC3H,6GACA,mBACE,cAAIqB,WAAW,OACb,aAAGA,WAAW,MAAI,oEAEpB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,mEAEpB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,iFAEpB,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAI,iCAGtB,QAAC,KAAK,CAACX,GAAG,eAAeO,OAAO,IAAIC,KAAK,mBAAmBC,WAAW,OAAOC,WAAW,iCAAiCpB,QAAQ,WAClI,mEAAqD,gBAAMqB,WAAW,IAClE,UAAa,iBAAe,cACN,QAAQ,gBAAMA,WAAW,IAC/C,UAAa,iBAAe,aACP,MACzB,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,OAAK,gBAAMA,WAAW,IAChC,UAAa,iBAAe,mBACD,gEAEjC,cAAIA,WAAW,OACb,aAAGA,WAAW,OAAK,gBAAMA,WAAW,IAChC,UAAa,iBAAe,sBACE,wDAO1C,CAEAxB,EAAW0B,gBAAiB,C","sources":["webpack://binary-studio-academy-2021-stage-2/./src/pages/lectures/how-to-work-with-git/en/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Lecture, VideoWrapper, Level, Language, TimelineOfContents } from \"../../../../components\";\nimport { viktoriiaVasylenko2021Avatar } from \"../../../../assets/images/avatars/intro-rounded\";\nexport const metadata = {\n  orderId: 1,\n  author: \"Viktoriia Vasylenko\",\n  title: \"How to work with Git\",\n  description: \"Viktoriia is telling about <strong>Git</strong> basics and common Git commands. She also shows the whole process of working with Git: from cloning the repository to creating pull requests.\",\n  keywords: [\"hola\", \"guapa\"],\n  duration: \"38 min\",\n  publishedAt: \"2021-12-08T10:00:00\",\n  hiddenFromMainPage: true\n};\nexport const _frontmatter = {};\nconst layoutProps = {\n  metadata,\n  _frontmatter\n};\nconst MDXLayout = Lecture;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <div>\n  <h1>\n    <strong>How to work with Git</strong>\n  </h1>\n    </div>\n    <Language currentLanguage=\"en\" languages={{\n      en: \"lectures/how-to-work-with-git/en\",\n      ua: \"lectures/how-to-work-with-git/ua\"\n    }} mdxType=\"Language\" />\n    <div>\n  <div className=\"author\">\n      <div className=\"avatar-wrapper\">\n        <object className=\"avatar-object\" role=\"img\" data={viktoriiaVasylenko2021Avatar} aria-label=\"Viktoriia Vasylenko\"></object>\n      </div>\n      <div className=\"profile\">\n        <h3 className=\"name\">Viktoriia Vasylenko</h3>\n        <p className=\"about\">\n          Viktoriia works at Binary Studio as a Full stack developer after finishing Binary Studio Academy in 2020.\n        </p>\n      </div>\n    </div>\n  <div className=\"bubble\" style={{\n        \"margin\": \"-0.5em 1em 1em\"\n      }}>\n    <strong>Hi, student!</strong> ðŸ‘‹<br />Welcome to the Git lecture. Here you'll find a short script to the lecture with Git commands and useful links. Let's go!\n  </div>\n    </div>\n    <div id=\"table-of-contents\" className=\"table-of-contents\" style={{\n      \"marginTop\": \"2em\"\n    }}>\n  <h2><strong>Lecture plan</strong></h2>\n  <TimelineOfContents timeline={[{\n        linkTo: \"#setting-up-the-repository\",\n        title: \"Setting up the repository\"\n      }, {\n        linkTo: \"#practicing-git\",\n        title: <span>Common <code>git</code> commands</span>\n      }, {\n        linkTo: \"#git-flow\",\n        title: \"Git flow\"\n      }, {\n        linkTo: \"#undo-changes\",\n        title: \"Undo the changes\"\n      }]} mdxType=\"TimelineOfContents\" />\n    </div>\n    <VideoWrapper duration=\"33m 31s\" mdxType=\"VideoWrapper\">\n  <iframe src=\"https://www.youtube.com/embed/czNvX0xdFZA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n    </VideoWrapper>\n    <Level id=\"setting-up-the-repository\" number=\"1\" name=\"Setting up the repository\" difficulty=\"Beginner\" objectives=\"How to create and clone the repo\" mdxType=\"Level\" />\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Before you clone the repository set up either PAT (personal access token) or SSH keys.\nYou may find this helpful - `}</p>\n        <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\"><strong>How to set up PAT</strong></a>, \n        <a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh\"><strong>How to set up SSH keys</strong></a>.  \n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To clone the repositoty use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git clone`}</code>{` command + copied repository URL.  `}</p>\n        <p parentName=\"li\">{`In case you choose https it will look like:  `}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"className\": \"language-text\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`git clone https://github.com/<my-username>/homepage.git`}</code></pre></div>\n        <p parentName=\"li\">{`In case of SSH: `}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"className\": \"language-text\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`git clone git@github.com:<my-username>/homepage.git`}</code></pre></div>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git remote show origin`}</code>{` to see remote repository URL.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git status`}</code>{` command will display the state of your repositoty and staging area.\nUse it to see which files are added to the staging area and are going to be included in commit.`}</p>\n      </li>\n    </ol>\n    <Level id=\"practicing-git\" number=\"2\" name={<span>Common <code>git</code> commands</span>} difficulty=\"Beginner\" objectives=\"How to create commits and branches\" mdxType=\"Level\" />\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To add changed files to the staging area we use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git add`}</code>{` command + file name.\nYou may use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git add .`}</code>{` command to add `}<strong>{`all`}</strong>{` changed and untracked files.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To create a commit use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git commit`}</code>{` command. To add a description message use `}</p>\n        <div parentName=\"li\" {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"text\"\n        }}><pre parentName=\"div\" {...{\n            \"className\": \"language-text\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-text\"\n            }}>{`git commit -m \"Your message here\"`}</code></pre></div>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git branch`}</code>{` command to see local branches and `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git checkout branch-name`}</code>{` to switch to the branch.`}<br parentName=\"p\"></br>{`\n`}{`To create a new branch and switch to it use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git checkout -b branch-name`}</code>{` command.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git log`}</code>{` command shows commit history of your branch.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To update your remote branch use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git push`}</code>{` command.\nIf your local branch doesn't exists on the remote you might need to run `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git push --set-upstream branch-name`}</code>{`\nor just `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git push -u branch-name`}</code>{`, which means the same. Otherwise you may explicitly set\na remote branch you want to push your changes to, like `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git push origin branch-name`}</code>{`.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Git stash is handy when you're not ready to commit yet. `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git stash`}</code>{` command will add your changes\nto stash, `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git stash list`}</code>{` will show you all available stashes, and `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git stash pop`}</code>{` with apply\nyour changes back.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`To follow you teammates changes you might need to run `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git fetch`}</code>{` command. `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git fetch`}</code>{` downloads\ncommits, files, or new branches from a remote repository into your local repo. After that you may\nmerge remote branch changes into your local branch (by using `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git merge branch-name`}</code>{` command).\nYou may use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git pull`}</code>{` command to fetch changes froma  remote branch and merge them at one time.  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In case you forgot to add some files to your last commit or noticed a typo in a message you may use `}<code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git commit --ammend`}</code>{`. `}</p>\n      </li>\n    </ol>\n    <Level id=\"git-flow\" number=\"3\" name=\"Git flow\" difficulty=\"Intermediate\" objectives=\"How to create pull requests\" mdxType=\"Level\" />\n    <p>{`You might need/want/like to follow the next steps during yout work with a repository:  `}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create branches - create a separate branch for every feature  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add commits - make small commits with a meaningful messages  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open a Pull request - open PR to discuss, review and approve your changes  `}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Merge to the main branch  `}</p>\n      </li>\n    </ol>\n    <Level id=\"undo-changes\" number=\"4\" name=\"Undo the changes\" difficulty=\"Hard\" objectives=\"How to revert or reset commits\" mdxType=\"Level\" />\n    <p>{`To undo you changes you may use two commands: `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`git revert`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`git reset`}</code>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git revert HEAD`}</code>{` creates a new commit with the inverse of the last commit.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><code parentName=\"p\" {...{\n            \"className\": \"language-text\"\n          }}>{`git reset <commit>`}</code>{` clears the commit history until the given commit.`}</p>\n      </li>\n    </ol>\n\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["metadata","orderId","author","title","description","keywords","duration","publishedAt","hiddenFromMainPage","_frontmatter","layoutProps","MDXLayout","Lecture","MDXContent","components","props","mdxType","currentLanguage","languages","en","ua","className","role","data","viktoriiaVasylenko2021Avatar","style","id","timeline","linkTo","src","frameBorder","allow","allowFullScreen","number","name","difficulty","objectives","parentName","href","isMDXComponent"],"sourceRoot":""}